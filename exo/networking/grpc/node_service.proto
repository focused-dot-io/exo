syntax = "proto3";

package exo.networking.grpc;

// Shard information
message Shard {
    string model_id = 1;
    int32 start_layer = 2;
    int32 end_layer = 3;
    int32 n_layers = 4;
}

// Status of a transfer operation
message TransferStatus {
    enum Status {
        OK = 0;
        ERROR = 1;
    }
    Status status = 1;
    string error_message = 2;
    int64 bytes_received = 3;
    int64 total_bytes = 4;
}

// A chunk of data during shard transfer
message ShardChunk {
    // Metadata for a file being transferred
    message Metadata {
        Shard shard = 1;
        string inference_engine = 2;
        string file_name = 3;
        int64 file_size = 4;
    }

    oneof content {
        Metadata metadata = 1;
        bytes chunk_data = 2;
    }
    int64 offset = 3;
    bool is_last = 4;
}

// Health check messages
message HealthCheckRequest {}

message HealthCheckResponse {
    bool is_healthy = 1;
}

// Node service for peer-to-peer operations
service NodeService {
    // Check if a shard is available locally
    rpc GetShardStatus(Shard) returns (ShardStatus);

    // Transfer a shard to another node
    rpc TransferShard(stream ShardChunk) returns (stream TransferStatus);

    // Health check
    rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

// Status of a shard request
message ShardStatus {
    bool has_shard = 1;
    string error_message = 2;
}
